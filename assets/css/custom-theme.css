html,
body {
    max-width: 100%;
    overflow-x: hidden;
    background: rgb(0, 0, 0);
    scroll-behavior: smooth;
}

body {
    background: rgb(0, 0, 0);
    background: linear-gradient(-45deg, rgb(21, 21, 21) 0%, rgb(49, 49, 49) 100%);
}

table {
    border: 1px solid #ccc;
    border-collapse: collapse;
    margin: 0;
    padding: 0;
    width: 100%;
    table-layout: fixed;
}

table caption {
    font-size: 1.5em;
    margin: .5em 0 .75em;
}

table tr {
    border: 1px solid #ddd;
    padding: .35em;
}

table th,
table td {
    padding: .625em;
    text-align: center;
}

table th {
    font-size: .85em;
    letter-spacing: .1em;
    text-transform: uppercase;
}

@media screen and (max-width: 600px) {
    table {
        border: 0;
    }

    table caption {
        font-size: 1.3em;
    }

    table thead {
        border: none;
        clip: rect(0 0 0 0);
        height: 1px;
        margin: -1px;
        overflow: hidden;
        padding: 0;
        position: absolute;
        width: 1px;
    }

    table tr {
        border-bottom: 3px solid #ddd;
        display: block;
        margin-bottom: .625em;
    }

    table td {
        border-bottom: 1px solid #ddd;
        display: block;
        font-size: .8em;
        text-align: right;
    }

    table td::before {
        /*
    * aria-label has no advantage, it won't be read inside a table
    content: attr(aria-label);
    */
        content: attr(data-label);
        float: left;
        font-weight: bold;
        text-transform: uppercase;
    }

    table td:last-child {
        border-bottom: 0;
    }
}

.animatedZoom {
    transition: transform .2s;
    /* Animation */
}

.animatedZoom:hover {
    transform: scale(1.001);
    /* (150% zoom - Note: if the zoom is too large, it will go outside of the viewport) */
}

.glassPanel {
    background-color: rgba(0, 0, 0, 0.65);
}

.animatedZoom {
    transition: transform .2s;
    /* Animation */
}

.animatedZoom:hover {
    transform: scale(1.5);
    /* (150% zoom - Note: if the zoom is too large, it will go outside of the viewport) */
}

.whiteBorder {
    border: 5px solid #fff;
}

.orangeBorder {
    border: 5px solid #ffd033;
}

.darkBorder {
    border: 5px solid #343434;
}

/* Rounded Corner FX */
/* 0,0,0,0 - top left, top right, bottom right, bottom left */
.rcTopLeft {
    border-radius: 10px 0px 0px 0px;
}

.rcTopRight {
    border-radius: 0px 10px 0px 0px;
}

.rcBottomLeft {
    border-radius: 0px 0px 0px 10px;
}

.rcBottomRight {
    border-radius: 10px 0px 10px 0px;
}

.rcTop {
    border-radius: 10px 10px 0px 0px;
}

.rcBottom {
    border-radius: 0px 0px 10px 10px;
}

.rcLeft {
    border-radius: 10px 0px 0px 10px;
}

.rcRight {
    border-radius: 0px 10px 10px 0px;
}

.roundedCorners {
    border-radius: 10px 10px 10px 10px;
}

.rcNone {
    border-radius: 0px 0px 0px 0px;
}

.pulseEffect:hover {
    animation: pulse 1.95s infinite;
}

@keyframes pulse {
    0% {
        transform: scale(0.95);
        box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.7);
    }

    70% {
        transform: scale(1);
        box-shadow: 0 0 0 10px rgba(255, 255, 255, 0);
    }

    100% {
        transform: scale(0.95);
        box-shadow: 0 0 0 0 rgba(255, 255, 255, 0);
    }
}
